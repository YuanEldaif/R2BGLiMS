% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JAMMR.R
\name{JAMMR}
\alias{JAMMR}
\title{JAMMR}
\usage{
JAMMR(bx, sx, by, sy, N1, eafs = NULL, G.matrix = NULL, trait.var = NULL,
  iter = 1e+06, w, initial.model = rep(1, length(bx)), n.models = 10,
  jam.model.priors = c(1, length(bx)), loss.function = "variance",
  random.effects = TRUE, jam.seed = NULL)
}
\arguments{
\item{bx}{Univariate effect estimates between each SNP and the risk factor.}

\item{sx}{Standard errors for the SNP-risk factor genetic effects.}

\item{by}{Univariate effect estimates between each SNP and the outcome.}

\item{sy}{Standard errors for the SNP-outcome genetic effects.}

\item{N1}{Sample size of the study from which the bx effects were obtained.}

\item{eafs}{A vector of effect allele frequencies of length same as bx. Must 
be provided if genetic variants are assumed to be independent.}

\item{G.matrix}{A reference matrix for the genetic variants used in the analysis.
If present, will override eafs and force JAM-MR to model genetic 
variants as correlated. If absent, JAM-MR will assume that genetic
variants are independent. One of eafs ad G.matrix must be specified.}

\item{trait.var}{An estimate of the variance in risk factor measurements
(can be obtained from the G-X GWAS and will be equal to 1
if the GWAS estimates are reported based on standardized data).
If not provided, it is internally estimated by JAM-MR.}

\item{iter}{The number of reversible-jump MCMC iterations to perform.}

\item{w}{Tuning parameter(s) for pleiotropy penalization. If scalar, a single
JAM-MR implementation will be run. If vector, one implementation
will be run for each value and the minimum-causal-standard -error run
will be selected. Values should typically be multiples of N1.
Larger values encourage stronger penalization and smaller models.}

\item{initial.model}{The model to be used in the first iteration of the stochastic search.}

\item{n.models}{The (maximum) number of highest-posterior-probability models to be reported
by JAM-MR. If set to zero, no models will be reported.}

\item{jam.seed}{The seed to use for initializing the RJMCMC algorithm, if any.
If multiple JAM-MR runs are implemented, these will be seeded using
jam.seed, jam.seed + 1, jam.seed + 2, ...}
}
\value{
A JAMMR results object, which is a list with the following components:
\enumerate{
\item causal: The estimated causal effect.  
\item se: The corresponding standard error.  
\item se.adj: Adjusted standard error (equal to se * 1.3178).  
\item model.matrix: A matrix containing the highest posterior probability models 
visited by JAM-MR during the variable selection procedure.
See the function TopModels for more details.  
\item snp.probs: Posterior inclusion probabilities for each SNP.  
\item w: The value of the tuning parameter selected.
\item all.causal: Causal effect estimates from all JAM-MR runs (for various w).
\item all.se: Causal standard errors from all JAM-MR runs (for various w).
\item all.w: All w values used.
\item all.probs: SNP inclusion probabilities for all JAM-MR runs (for various w).
}

sensitivity plot
}
\description{
JAM-MR does stochastic search (RJMCMC) to select instruments robustly associated with
the risk factor, while penalizing pleiotropic sets
of SNPs according to a heterogeneity loss function (similar to the
het-pen approach of Burgess et al., 2018). The statistical framework for 
combining Bayesian inference with loss functions is provided in Bissiri, Holmes and Walker (2016).
The stochastic search provides posterior model probbilities and causal
effect estimation is then performed by averaging the individual-model
IVW estimates weighted by the model probabilities.
}
\examples{
# --- Load libraries
library(R2BGLiMS)
data("JAMMR_Example")

# APOSTOLOS SHORT DESCRIPTION OF LOADED DATA

########################################################################
### --- Run JAM-MR with a single value of w and independent data --- ###
########################################################################

# Implement the algorithm.
jammr.results1 <- JAMMR(bx.sim, sx.sim, by.sim, sy.sim, N1 = 5000, eafs = rep(0.3, 50),
                        trait.var = 5, iter = 1e6, w = 5000, jam.seed = 22)

# Diagnostics.
jammr.results1$causal   ## Approximately 0.5 which is the correct value.
jammr.results1$se
jammr.results1$se.adj

jammr.results1$snp.probs   ## Probabilities of inclusion per SNP.
jammr.results1$snp.probs[which.pl == 0]   ## Probabilities for valid SNPs.
jammr.results1$snp.probs[which.pl == 1]   ## Probabilities for pleiotropic SNPs.

jammr.results1$model.matrix   ## The top models visited by JAMMR.

# Plotting.
JAMMR_ManhattanPlot(jammr.results1)
JAMMR_SensitivityPlot(jammr.results1)

# Run without the trait variance.
jammr.results1.1 <- JAMMR(bx.sim, sx.sim, by.sim, sy.sim, N1 = 5000, eafs = rep(0.3, 50),
                          iter = 1e6, w = 5000, jam.seed = 22)
# Different results because trait variance estimate here was completely arbitrary.

#########################################################################
### --- Run JAM-MR with a single w and dependent genetic variants --- ###
#########################################################################

# Simulate a reference genetic matrix for correlated-SNP analysis.
G.sim <- matrix(rbinom(500000, 2, 0.3), 10000, 50)
# This is just for testing purposes. The genetic matrix is based
# on an independence assumption so the results should be very
# similar to those obtained previously.

# Run the algorithm.
jammr.results2 <- JAMMR(bx.sim, sx.sim, by.sim, sy.sim, N1 = 5000, G.matrix = G.sim,
                        trait.var = 5, iter = 1e6, w = 5000, jam.seed = 23)

# Diagnostics.
jammr.results2$causal
jammr.results2$se
jammr.results2$snp.probs

# Plotting.
JAMMR_ManhattanPlot(jammr.results2)
JAMMR_SensitivityPlot(jammr.results2)

#########################################################################
### --- Run JAM-MR with multiple values of w and independent data --- ###
#########################################################################

# Implement the algorithm.
jammr.results3 <- JAMMR(bx.sim, sx.sim, by.sim, sy.sim, N1 = 5000, eafs = rep(0.3, 50),
                        trait.var = 5, iter = 1e6, jam.seed = 24, 
                        w = c(0, 500, 1000, 2000, 5000, 10000, 20000, 50000))

# Diagnostics.
jammr.results3$causal
jammr.results3$se
jammr.results3$se.adj
jammr.results3$snp.probs
jammr.results3$w

jammr.results3$all.causal
jammr.results3$all.se
jammr.results3$all.w
jammr.results3$all.probs

# Plotting.
JAMMR_ManhattanPlot(jammr.results3)
JAMMR_ManhattanPlot(jammr.results3, only.best = TRUE)
JAMMR_SensitivityPlot(jammr.results3, adjust.se = TRUE, show.n.snps = TRUE)

########################################################################
### --- Run JAM-MR with multiple values of w and correlated data --- ###
########################################################################

# Implement the algorithm.
jammr.results4 <- JAMMR(bx.sim, sx.sim, by.sim, sy.sim, N1 = 5000, G.matrix = G.sim,
                        trait.var = 5, iter = 1e6, jam.seed = 24, 
                        w = c(0, 500, 1000, 2000, 5000, 10000, 20000, 50000))

# Diagnostics.
jammr.results4$causal
jammr.results4$se
jammr.results4$se.adj
jammr.results4$snp.probs
jammr.results4$w

jammr.results4$all.causal
jammr.results4$all.se
jammr.results4$all.w
jammr.results4$all.probs

# Plotting.
JAMMR_ManhattanPlot(jammr.results4)
JAMMR_ManhattanPlot(jammr.results4, only.best = TRUE)
JAMMR_SensitivityPlot(jammr.results4, adjust.se = TRUE, show.n.snps = TRUE)
}
\seealso{
See \code{\link{JAMMR_ManhattanPlot}} for a visual 
summary of individual SNP selection probabilities and \code{\link{JAMMR_SensitivityPlot}}
for producing sensitivity plots of causal effects and standard errors for various values of w.
}
\author{
Apostolos Gkatzionis
}
